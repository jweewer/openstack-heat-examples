heat_template_version: 2017-02-24
description: Fully automated installation of a debian image with a mysql database server

parameters:
  keyname:
    type: string
    description: Name of available keypair

  ext_network:
    type: string
    description: Name of the external network
    default: external

  int_network:
    type: string
    description: Name of the internal network
    default: internal

  int_subnet_name:
    type: string
    description: Name of the subnet for the internal network
    default: internal_subnet

  router_name:
    type: string
    description: Name for the router in this network
    default: router1

  cinder_volume_size:
    type: number
    description: Size of the cinder volume
    default: 1
    contraints:
      - range: { min: 1, max: 5 }

resources:
  instance:
    type: OS::Nova::Server
    properties:
      image: debian
      flavor: m2.small
      key_name: { get_param: keyname }
      networks:
        - port: { get_resource: network_port_instance }
      user_data: { get_resource: server_init }
      user_data_format: RAW

#### Network part
  router1:
    type: OS::Neutron::Router
    properties:
      name: { get_param: router_name }
      external_gateway_info:
        network: { get_param: ext_network }

  internal_network:
    type: OS::Neutron::Net
    properties:
      name: { get_param: int_network } 

  internal_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: { get_param: int_subnet_name }
      network_id: { get_resource: internal_network }
      cidr: 192.168.20.0/24
      gateway_ip: 192.168.20.1
      dns_nameservers: [ 8.8.8.8 ]

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router1 }
      subnet_id: { get_resource: internal_subnet }

  network_port_instance:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: internal_network }
      security_groups: [ { get_resource: mysql_security_group } ]  

  floatingip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: ext_network } 
      port_id: { get_resource: network_port_instance }
    
  mysql_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      name: Access Rules MySQL
      rules:
      - protocol: tcp
        remote_ip_prefix: 0.0.0.0/0
        direction: ingress
        port_range_min: 3306
        port_range_max: 3306
      - protocol: tcp
        remote_ip_prefix: 0.0.0.0/0
        direction: ingress
        port_range_min: 22
        port_range_max: 22
      - protocol: icmp
        remote_ip_prefix: 0.0.0.0/0
        direction: ingress   

#### End network part

#### Add volume on rbd storage ####
  volume_block:
    type: OS::Cinder::Volume
    properties:
       name: mysqldata
       size: { get_param: cinder_volume_size } 
       volume_type: rbd_storage

  volume_block_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: volume_block }
      instance_uuid: { get_resource: instance } 
#### End volume attachment ####

#### Cloud-config ####
  my_config:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        package_update: true
        package_upgrade: true
        packages:
          - mysql-server
          - mysql-client

  mysqlconfig:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config: 
        str_replace:
          template: |
            #!/bin/bash
            mysqladmin -u root password $mysqlpasswd
          params:
            $mysqlpasswd: { get_attr: [ mysqlpassword, value ] }
      

#### End config ####

#### Generate password mysql server ####
  mysqlpassword:
    type: OS::Heat::RandomString
    properties:
      length: 10

  server_init:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: { get_resource: my_config }
      - config: { get_resource: mysqlconfig }

outputs:
  mysql_initial_password:
    description: Initial MySQL root password
    value: { get_attr: [ mysqlpassword, value  ] } 
